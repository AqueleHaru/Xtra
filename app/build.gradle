plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs.kotlin' version "$navigation"
}

android {
    signingConfigs {
        debug {
            keyAlias 'debug'
            keyPassword '123456'
            storeFile file('debug-keystore.jks')
            storePassword '123456'
        }
    }
    namespace 'com.github.andreyasadchy.xtra'
    compileSdk 33

    defaultConfig {
        applicationId "com.github.andreyasadchy.xtra"
        minSdk 16
        targetSdk 33
        versionCode 121
        versionName "2.17.5"
        resourceConfigurations += ["ar", "de", "en", "es", "fr", "in", "ja", "pt-rBR", "ru", "tr"]
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            signingConfig signingConfigs.debug
            multiDexEnabled true
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        buildConfig true
        viewBinding true
    }
    lint {
        disable 'ContentDescription'
    }
    configurations.all {
        resolutionStrategy {
            force 'androidx.appcompat:appcompat:1.1.0-rc01' // https://github.com/crackededed/Xtra/issues/3 https://stackoverflow.com/questions/41025200/android-view-inflateexception-error-inflating-class-android-webkit-webview
            force 'com.squareup.okhttp3:logging-interceptor:3.12.0'
            force 'com.squareup.retrofit2:retrofit:2.6.4'
            force 'com.squareup.retrofit2:converter-gson:2.6.4'
        }
    }
}

dependencies {
    implementation 'org.conscrypt:conscrypt-android:2.5.2'
    implementation 'androidx.multidex:multidex:2.0.1'

    //UI
    implementation 'com.google.android.material:material:1.9.0-beta01'
    implementation 'androidx.appcompat:appcompat:1.7.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation 'com.github.woxthebox:draglistview:1.7.3'

    //Architecture components
    implementation "androidx.paging:paging-runtime-ktx:$paging"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle"
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.fragment:fragment-ktx:1.5.6'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"
    implementation 'androidx.webkit:webkit:1.6.1'

    //Misc
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11'

    implementation "androidx.tonyodev.fetch2:xfetch2:$fetch"
    implementation "androidx.tonyodev.fetch2okhttp:xfetch2okhttp:$fetch"
    implementation 'com.iheartradio.m3u8:open-m3u8:0.2.6'

    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayer"
    implementation "com.google.android.exoplayer:exoplayer-hls:$exoplayer"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayer"
    implementation "com.google.android.exoplayer:extension-mediasession:$exoplayer"
    implementation 'org.checkerframework:checker-qual:3.33.0'

    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide@aar"
    implementation 'com.github.zjupure:webpdecoder:2.3.4.14.2'

    implementation "com.google.dagger:hilt-android:$dagger"
    kapt "com.google.dagger:hilt-compiler:$dagger"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
}

kapt {
    arguments {
        arg('room.schemaLocation', "$projectDir/schemas")
    }
}

// Delete large build log files from ~/.gradle/daemon/X.X/daemon-XXX.out.log
// Source: https://discuss.gradle.org/t/gradle-daemon-produces-a-lot-of-logs/9905
def gradle = project.getGradle()
new File("${gradle.getGradleUserHomeDir().getAbsolutePath()}/daemon/${gradle.getGradleVersion()}").listFiles().each {
    if (it.getName().endsWith('.out.log')) {
        // println("Deleting gradle log file: $it") // Optional debug output
        it.delete()
    }
}